// =============================================================================
// Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
// Copyright (C) 2010 - DIGITEO - Vincent COUVERT <vincent.couvert@scilab.org>
//
//  This file is distributed under the same license as the Scilab package.
// =============================================================================
// <-- CLI SHELL MODE -->
// <-- ENGLISH IMPOSED -->
// <-- LONG TIME EXECUTION -->
// Unitary test for conversion of Matlab function: AXIS
exec("SCI/modules/m2sci/tests/unit_tests/utils/m2sciTestConversionNoExe.sci", -1);
mprintf("%s\n", m2sciTestConversionNoExe("AXIS"));
  ****** Beginning of mfile2sci() session ******
  File to convert: SCI/modules/m2sci/tests/unit_tests/mfilesnoexec/AXIS.m
  Result file path: TMPDIR/
  Recursive mode: OFF
  Only double values used in M-file: NO
  Verbose mode: -1
  Generate formatted code: YES
  M-file reading...
  M-file reading: Done
  Syntax modification...
  Syntax modification: Done
  Macro to tree conversion...
  Conversion of M-tree...
  !! L.12: No Scilab equivalent for: axis([xmin,xmax,ymin,ymax,zmin,zmax,cmin,cmax])
  L.13: Unknown variable axis is a M-file.
  !! L.18: No Scilab equivalent for: axis("fill")
  !! L.24: No Scilab equivalent for: axis("image")
  !! L.25: cube_scaling only used in 3d mode.
  !! L.27: No Scilab equivalent for: axis("normal")
  !! L.42: cube_scaling only used in 3d mode.
  Conversion of M-tree: Done
TESTING M2SCI: creating varslist file...
  Macro to tree conversion: Done
  Translation may be wrong (see the //!! comments).
  ****** End of mfile2sci() session ******
// Test file for function axis()
// Copyright INRIA
// Matlab version: 6.5.1.199709 (R13) Service Pack 1
// V.C.
// Copyright 2020 - Samuel GOUGEON
xmin = 1;
ymin = 1;
zmin = 1;
cmin = 1;
xmax = 10;
ymax = 10;
zmax = 10;
cmax = 10;
gca().data_bounds = [xmin,xmax,ymin,ymax];
gca().data_bounds = [xmin,xmax,ymin,ymax,zmin,zmax];
axis([xmin,xmax,ymin,ymax,zmin,zmax,cmin,cmax])
v = get(gca(),"data_bounds");
gca().auto_scale = "on";
gca().auto_scale = "off";
gca().tight_limits = "on";
axis("fill")
gca().axes_reverse(2) = "on";
gca().axes_reverse(2) = "off";
gca().isoview = "on";
axis("image")
gca().cube_scaling = "on";
gca().view = "3d";
axis("normal")
gca().axes_visible = "off";
gca().axes_visible = "on";
h1.isoview = "on";
h1.axes_reverse(2) = "on";
h1.axes_reverse(2) = "off";
%v0 = [h1,h2];
%v0.auto_scale = "on";
%v0 = [h1,h2];
%v0(:).axes_reverse(:,2) = "on";
%v0(:).axes_reverse(:,2) = "off";
[mode,visibility,direction] = mtlb_axis("state")
gca().auto_scale = "on";
gca().cube_scaling = "on";
gca().tight_limits = "on";
h2.auto_scale = "off";
h2.data_bounds = [xmin,xmax,ymin,ymax];
