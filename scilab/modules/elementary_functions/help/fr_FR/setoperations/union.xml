<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * Copyright (C) 2012 - 2016 - Scilab Enterprises
 * Copyright (C) 2020 - Samuel GOUGEON
 *
 * This file is hereby licensed under the terms of the GNU GPL v2.0,
 * pursuant to article 5.3.4 of the CeCILL v.2.1.
 * This file was originally licensed under the terms of the CeCILL v2.1,
 * and continues to be available under such terms.
 * For more information, see the COPYING file which you should have received
 * along with this program.
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns5="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook"
          xmlns:scilab="http://www.scilab.org" xml:id="union" xml:lang="fr">
    <refnamediv>
        <refname>union</refname>
        <refpurpose>
            Ensemble de tous les éléments, lignes ou colonnes de deux matrices, sans doublons
        </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Séquence d'appel</title>
        <synopsis>
            [v, ka, kb] = union(a, b)
            [v, ka, kb] = union(a, b, orient)
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Paramètres</title>
        <variablelist>
            <varlistentry>
                <term>a, b</term>
                <listitem>
                    tableaux de booléens, de nombres, ou de texte. Matrices creuses booléennes
                    ou numériques acceptées. Les types de <varname>a</varname> et de
                    <varname>b</varname> peuvent être distincts mais compatibles pour la
                    concaténation.
                    <para/>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>orient</term>
                Orientation du traitement :
                <listitem>
                    <itemizedlist>
                        <listitem>
                            1 or "r": union des lignes de <varname>a</varname> et de
                            <varname>b</varname>.
                        </listitem>
                        <listitem>
                            2 or "c": union des colonnes de <varname>a</varname> et de
                            <varname>b</varname>.
                        </listitem>
                    </itemizedlist>
                    <para/>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>v</term>
                <listitem>
                    vecteur ligne, ou matrice. Le type de <varname>v</varname> est celui
                    de <literal>[a(:) ; b(:)]</literal>.
                    <para/>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>ka</term>
                <listitem>
                    vecteur ligne d'entiers : rangs dans <varname>a</varname> des
                    éléments/lignes/colonnes de <varname>v</varname> présents dans
                    <varname>a</varname>.
                    <para/>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>kb</term>
                <listitem>
                    vecteur ligne d'entiers : rangs dans <varname>b</varname> des
                    éléments/lignes/colonnes de <varname>v</varname> restants issus de
                    <varname>b</varname>.
                    <para/>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            <literal>union(a,b)</literal> renvoie un vecteur ligne contenant les
            valeurs distinctes (classées par ordre croissant) contenues dans les
            éléments de <literal>[a(:);b(:)]</literal>.
        </para>
        <para>
            <literal>union(a,b,"r")</literal> ou
            <literal>union(a,b,1)</literal>renvoie la matrice formée de l'union des
            lignes distinctes de <literal>a</literal> et <literal>b</literal> triées
            dans l'ordre lexicographique croissant. Dans ce cas les matrices
            <literal>a</literal> et <literal>b</literal> doivent avoir le même nombre
            de colonnes.
        </para>
        <para>
            <literal>union(a,b,"c")</literal> ou
            <literal>union(a,b,2)</literal>renvoie la matrice formée de l'union des
            colonnes distinctes de <literal>a</literal> et <literal>b</literal> triées
            dans l'ordre lexicographique croissant. Dans ce cas les matrices
            <literal>a</literal> et <literal>b</literal> doivent avoir le même nombre
            de lignes.
        </para>
        <para>
            <literal>[v,ka,kb]=union(a,b)</literal> renvoie aussi les vecteurs
            d'indices <literal>ka</literal> et <literal>kb</literal> tels que
            <literal>v</literal> est une combinaison triée des termes de
            <literal>a(ka)</literal> et <literal>b(kb)</literal>.
        </para>
    </refsection>
    <refsection>
        <title>Exemples</title>
        <programlisting role="example"><![CDATA[
A = [6  7  6 ; 5  8  3 ];
B = [1  7  1  0  6 ];

union(A, B)
[u, ka, kb] = union(A, B)
     ]]></programlisting>
     <screen><![CDATA[
--> union(A, B)
 ans  =
   0.   1.   3.   5.   6.   7.   8.

--> [u, ka, kb] = union(A, B)
 u  =
   0.   1.   3.   5.   6.   7.   8.
 ka  =
   6.   2.   1.   3.   4.
 kb  =
   4.   1.
]]></screen>
        <para/>
        <programlisting role="example"><![CDATA[
A = ["a" "b" "a" "c" "c" "b"
     "b" "c" "a" "b" "c" "c" ];
B = ["b" "a" "c" "c" "b" "a"
     "a" "c" "b" "b" "b" "b" ];

[U, ka, kb] = union(A, B, "c")
     ]]></programlisting>
     <screen><![CDATA[
--> [U, ka, kb] = union(A, B, "c")
 U  =
  "a"  "a"  "a"  "b"  "b"  "b"  "c"  "c"
  "a"  "b"  "c"  "a"  "b"  "c"  "b"  "c"

 ka  =
   3.   1.   2.   4.   5.

 kb  =
   2.   1.   5.
]]></screen>
        <para/>
        <programlisting role="example"><![CDATA[
[F, T] = (%f, %t);
A = sparse([T T F T F T ; F F F F T T ; T F F F F T ]); full(A)
B = sparse([F F T T F F ; T T T T T T ; T F T T T F ]); full(B)

[U, ka, kb] = union(A, B, "c");
issparse(U)
full(U), ka, kb
     ]]></programlisting>
     <screen><![CDATA[
--> A = sparse([T T F T F T ; F F F F T T ; T F F F F T ]); full(A)
 ans  =
  T T F T F T
  F F F F T T
  T F F F F T

--> B = sparse([F F T T F F ; T T T T T T ; T F T T T F ]); full(B)
 ans  =
  F F T T F F
  T T T T T T
  T F T T T F

--> [U, ka, kb] = union(A, B, "c");
--> issparse(U)
 ans  =
  T

--> full(U), ka, kb
 ans  =
  F F F T T T
  F T T F F T
  F F T F T T

 ka  =
   3.   5.   2.   1.   6.
 kb  =
   1.
]]></screen>
    </refsection>
    <refsection role="see also">
        <title>Voir aussi</title>
        <simplelist type="inline">
            <member>
                <link linkend="brackets">brackets</link>
            </member>
            <member>
                <link linkend="unique">unique</link>
            </member>
        </simplelist>
    </refsection>
    <refsection role="history">
        <title>Historique</title>
        <revhistory>
            <revision>
                <revnumber>6.1.0</revnumber>
                <revdescription>
                    Extension aux matrices booléennes.
                </revdescription>
            </revision>
            <revision>
                <revnumber>6.1.1</revnumber>
                <revdescription>
                    Extension aux matrices creuses booléennes, réelles, ou complexes.
                </revdescription>
            </revision>
        </revhistory>
    </refsection>
</refentry>
